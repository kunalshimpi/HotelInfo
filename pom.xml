<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.psl.travel</groupId>
	<artifactId>HotelInfo</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>HotelInfo Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- spring-context which provides core functionality -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.27</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<!-- The spring-aop module provides an AOP Alliance-compliant aspect-oriented 
			programming implementation allowing you to define -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>

		<!-- The spring-webmvc module (also known as the Web-Servlet module) contains 
			Springâ€™s model-view-controller (MVC) and REST Web Services implementation 
			for web applications -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>

		<!-- The spring-web module provides basic web-oriented integration features 
			such as multipart file upload functionality and the initialization of the 
			IoC container using Servlet listeners and a web-oriented application context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.3.3.RELEASE</version>
		</dependency>
	</dependencies>
	<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->


	<properties>
		<java.version>1.7</java.version>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<db.driverClass>com.mysql.jdbc.Driver</db.driverClass>
		<db.connectionURL>jdbc:mysql://localhost:3306/hotel_region_us</db.connectionURL>
		<db.username>root</db.username>
		<db.password>root</db.password>
		<cimage>https://d152j5tfobgaot.cloudfront.net/wp-content/uploads/2015/05/Yourstory_India_tourism.jpg</cimage>

	</properties>
	<build>
		<finalName>HotelInfo</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/*.xml</include>
							</includes>
						</resource>

						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/*.jsp</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<imageName>keydocker/hotelinfo</imageName>
					<baseImage>tomcat:8.0</baseImage>
					<maintainer>keydocker</maintainer>
					<dockerHost>https://192.168.99.100:2376</dockerHost>
					<exposes>
						<expose>8080</expose>
					</exposes>
					<entryPoint>
						["catalina.sh", "run",
						"/usr/local/tomcat/webapps/${project.build.finalName}.war"]
					</entryPoint>

					<serverId>docker-hub</serverId>
					<registryUrl>https://index.docker.io/v1/</registryUrl>

					<resources>        <!-- Dockerfile building resources -->
						<resource>
							<targetPath>/usr/local/tomcat/webapps/</targetPath>
							<directory>${project.build.directory}</directory>
							<excludes>
								<exclude>target/**/*</exclude>
								<exclude>pom.xml</exclude>
								<exclude>*.iml</exclude>
							</excludes>
							<include>${project.build.finalName}.war</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
		<resources>

			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
